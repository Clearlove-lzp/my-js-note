1--浏览器监听页面最小化，切换其他标签页

兼容版本：

为了支持老版本的浏览器，我们需要对document.hidden在做一些前缀处理：
function getHiddenProp(){
        var prefixes = ['webkit','moz','ms','o'];
        // 如果hidden 属性是原生支持的，我们就直接返回
        if ('hidden' in document) {
          return 'hidden';
        }
        
        // 其他的情况就循环现有的浏览器前缀，拼接我们所需要的属性 
        for (var i = 0; i < prefixes.length; i++){
          // 如果当前的拼接的前缀在 document对象中存在 返回即可
          if ((prefixes[i] + 'Hidden') in document) {
            return prefixes[i] + 'Hidden';
          }  
        }
    
        // 其他的情况 直接返回null
        return null;
    }

同样的，我们可以获取document.visibilityState属性：
function getVisibilityState() {
    var prefixes = ['webkit', 'moz', 'ms', 'o'];

    if ('visibilityState' in document) {
      return 'visibilityState';
    }

    for (var i = 0; i < prefixes.length; i++) {
        if ((prefixes[i] + 'VisibilityState') in document){
          return prefixes[i] + 'VisibilityState';
        }  
    }
    // 找不到返回 null
    return null;
}

visibilitychange监听事件
var visProp = getHiddenProp();
if (visProp) {
    // 有些浏览器也需要对这个事件加前缀以便识别。
    var evtname = visProp.replace(/[H|h]idden/, '') + 'visibilitychange';

    document.addEventListener(evtname, function () {
        document.title = document[getVisibilityState()]+"状态";
    },false);
}

2.类数组对象转换成数组
var lis = [].slice.call(carousel.getElementsByTagName("li"));
或, 
array.from(arr),其中arr必须要有length属性，arr可以是类数组，字符串，Set结构, Array.from还可以接受第二个参数，
作用类似于数组的map方法，用来对每个元素进行处理，将处理后的值放入返回的数组。

3 base64转码
  window.atob(str)

4. 上传excel识别https://www.cnblogs.com/liuxianan/p/js-excel.html

5. evel()